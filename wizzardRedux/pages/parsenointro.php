<?php

/*
Internal test to see if the No-Intro pages can be traversed reasonably
*/

ini_set('max_execution_time', 6000); // Set the execution time higher because DATs can be big

if (isset($_GET["auto"]) && $_GET["auto"] == "1")
{
	$query = file("http://datomatic.no-intro.org/?page=download");
	
	$handle = fopen("css/nointro.php", "w");
	fwrite($handle, "<?php\n\n".
			"/*\nAuto-generated by parsenointro.php\n*/\n\n".
			"// Mapping for No-Intro systems to ids\n".
			"\$no_intro_ids = array (\n");
	foreach ($query as $line)
	{
		if (strpos($line, "index.php?page=search&s="))
		{
			$line = trim($line);
			preg_match("/<b><a href=\"index\.php\?page=search&s=([0-9]+).*>(.*)<\/a><\/b>/", $line, $xml);
			fwrite($handle, "\t'".$xml[2]."' => ".$xml[1].",\n");
		}
	}
	fwrite($handle, ")\n\n?>");
	fclose($handle);
}
else
{
	echo "<a href='page=parsenointro&auto=1'>Auto-generate no-intro name to system mapping</a><br/><br/>\n";
	
	$gameid = 1;
	$errorpage = false;
	while(!$errorpage)
	{
		$query = get_data("http://datomatic.no-intro.org/index.php?page=show_record&s=1&n=".str_pad($gameid, 4, "0", STR_PAD_LEFT));
		$query = explode("\n", $query);
		
		$section = "";
		$dump = "";
		foreach ($query as $line)
		{
			if (strpos($line, "I am too busy for this!"))
			{
				$errorpage = true;
				break;
			}
			
			if (strpos($line, "romname_section"))
			{
				$section = "romname";
				echo "Name: ";
			}
			elseif ($section == "romname" && strpos($line, "&nbsp;"))
			{
				echo str_replace("&nbsp;", "", 
						str_replace("<br />", "", trim($line)))."<br/>";
				$section = "";
			}
			elseif (strpos($line, "ROM data"))
			{
				$dump = "rom";
			}
			elseif (strpos($line, "Size"))
			{
				$section = "size";
				echo "Size: ";
			}
			elseif ($section == "size")
			{
				echo str_replace("<td class=\"TableData\" width=\"104px\">", "",
						str_replace("</td>", "", $line))."<br/>";
				$section = "";
			}
			elseif (strpos($line, "CRC32"))
			{
				$section = "crc32";
				echo "CRC32: ";
			}
			elseif ($section == "crc32")
			{
				echo str_replace("<td class=\"TableData\">", "", str_replace("</td>", "", $line))."<br/>";
				$section = "";
			}
			elseif (strpos($line, "MD5"))
			{
				$section = "md5";
				echo "MD5: ";
			}
			elseif ($section == "md5" && !strpos($line, "<td"))
			{
				echo str_replace("<td class=\"TableData\">", "", str_replace("</td>", "", $line))."<br/>";
				$section = "";
			}
			elseif (strpos($line, "SHA-1"))
			{
				$section = "sha1";
				echo "SHA-1: ";
			}
			elseif ($section == "sha1")
			{
				echo str_replace("<td class=\"TableData\">", "", str_replace("</td>", "", $line))."<br/>";
				$section = "";
			}
			else
			{
				//echo htmlspecialchars($line)."<br/>";
			}
		}
		$gameid++;
		echo "<br/>";
		if ($gameid > 1000)
		{
			die();
		}
	}
	
	// No-intro pages use POST to update information.
	// The values are the names, not the numericals
}

//https://davidwalsh.name/curl-download
/* gets the data from a URL */
function get_data($url) {
	$ch = curl_init();
	$timeout = 5;
	curl_setopt($ch, CURLOPT_URL, $url);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
	curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, $timeout);
	$data = curl_exec($ch);
	curl_close($ch);
	return $data;
}


?>